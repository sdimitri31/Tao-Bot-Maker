<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="action" xml:space="preserve">
    <value>Action</value>
  </data>
  <data name="ActionName_Click" xml:space="preserve">
    <value>Click</value>
  </data>
  <data name="ActionName_IfPicture" xml:space="preserve">
    <value>If picture</value>
  </data>
  <data name="ActionName_ImageSearch" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="ActionName_Key" xml:space="preserve">
    <value>Key</value>
  </data>
  <data name="ActionName_Loop" xml:space="preserve">
    <value>Sequence</value>
  </data>
  <data name="ActionName_PictureWait" xml:space="preserve">
    <value>Wait for image</value>
  </data>
  <data name="ActionName_Sequence" xml:space="preserve">
    <value>Sequence</value>
  </data>
  <data name="ActionName_Text" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="ActionName_Unknown" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="ActionName_Wait" xml:space="preserve">
    <value>Wait</value>
  </data>
  <data name="action_ErrorMessage_AttributeNotFound" xml:space="preserve">
    <value>Attribute not found, value has been defaulted</value>
  </data>
  <data name="action_ErrorMessage_AttributeParsingError" xml:space="preserve">
    <value>Attribute couldn't be parsed as integer, value has been defaulted</value>
  </data>
  <data name="action_ErrorMessage_ClickNotSelected" xml:space="preserve">
    <value>Error : Click button must be selected</value>
  </data>
  <data name="action_ErrorMessage_DeprecatedType" xml:space="preserve">
    <value>DEPRECATED TYPE : might cause crash when executed</value>
  </data>
  <data name="action_ErrorMessage_DragSpeedWrongInterval" xml:space="preserve">
    <value>Error : Drag speed must be a number between 1 and 5</value>
  </data>
  <data name="action_ErrorMessage_ExpirationWrongInterval" xml:space="preserve">
    <value>Error : Expiration must be a number between -1 and 999999</value>
  </data>
  <data name="action_ErrorMessage_IfFound" xml:space="preserve">
    <value>Error : Action "If found" must be selected</value>
  </data>
  <data name="action_ErrorMessage_IfNotFound" xml:space="preserve">
    <value>Error : Action "If not found" must be selected</value>
  </data>
  <data name="action_ErrorMessage_Image_NameEmpty" xml:space="preserve">
    <value>Error : Image must be selected</value>
  </data>
  <data name="action_ErrorMessage_Image_NotFound" xml:space="preserve">
    <value>Error : Image not found</value>
  </data>
  <data name="action_ErrorMessage_InvalidCoords" xml:space="preserve">
    <value>Error : Coordinates must be a number between -999999 and 999999</value>
  </data>
  <data name="action_ErrorMessage_Key_Lenght" xml:space="preserve">
    <value>Error : Key must be one letter</value>
  </data>
  <data name="action_ErrorMessage_Key_NotEntered" xml:space="preserve">
    <value>Error : Key must be entered</value>
  </data>
  <data name="action_ErrorMessage_RepeatNumber" xml:space="preserve">
    <value>Error : Repeat number must be between -1 and 999999</value>
  </data>
  <data name="action_ErrorMessage_SequenceName" xml:space="preserve">
    <value>Error : Sequence must be selected</value>
  </data>
  <data name="action_ErrorMessage_Text_NotEntered" xml:space="preserve">
    <value>Error : Text must be entered</value>
  </data>
  <data name="action_ErrorMessage_ThresholdWrongInterval" xml:space="preserve">
    <value>Error : Threshold must be a number between 0 and 255</value>
  </data>
  <data name="action_ErrorMessage_WaitTime" xml:space="preserve">
    <value>Error : Wait time must be between 0 and 2147483646ms</value>
  </data>
  <data name="action_ErrorMessage_WaitTimeMax" xml:space="preserve">
    <value>Error : Wait time maximum must be greater than wait time</value>
  </data>
  <data name="action_Member_Click" xml:space="preserve">
    <value>Click</value>
  </data>
  <data name="action_Member_DragSpeed" xml:space="preserve">
    <value>Drag speed</value>
  </data>
  <data name="action_Member_Expiration" xml:space="preserve">
    <value>Expiration</value>
  </data>
  <data name="action_Member_IfFound" xml:space="preserve">
    <value>Action if found</value>
  </data>
  <data name="action_Member_IfNotFound" xml:space="preserve">
    <value>Action if not found</value>
  </data>
  <data name="action_Member_IsCurrentPosClick" xml:space="preserve">
    <value>Current position click</value>
  </data>
  <data name="action_Member_IsDoubleClick" xml:space="preserve">
    <value>Double click</value>
  </data>
  <data name="action_Member_IsDrag" xml:space="preserve">
    <value>Drag</value>
  </data>
  <data name="action_Member_IsRandomInterval" xml:space="preserve">
    <value>Is random interval</value>
  </data>
  <data name="action_Member_Key" xml:space="preserve">
    <value>Key</value>
  </data>
  <data name="action_Member_PictureName" xml:space="preserve">
    <value>Picture name</value>
  </data>
  <data name="action_Member_RepeatNumber" xml:space="preserve">
    <value>Number of repetitions</value>
  </data>
  <data name="action_Member_Sequence" xml:space="preserve">
    <value>Sequence</value>
  </data>
  <data name="action_Member_Text" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="action_Member_Threshold" xml:space="preserve">
    <value>Threshold</value>
  </data>
  <data name="action_Member_WaitTime" xml:space="preserve">
    <value>Wait time</value>
  </data>
  <data name="action_Member_WaitTimeMax" xml:space="preserve">
    <value>Maximum wait time</value>
  </data>
  <data name="action_Member_X1" xml:space="preserve">
    <value>X1</value>
  </data>
  <data name="action_Member_X2" xml:space="preserve">
    <value>X2</value>
  </data>
  <data name="action_Member_Y1" xml:space="preserve">
    <value>Y1</value>
  </data>
  <data name="action_Member_Y2" xml:space="preserve">
    <value>Y2</value>
  </data>
  <data name="button_Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="button_ClearArea" xml:space="preserve">
    <value>Clear area</value>
  </data>
  <data name="button_FindImage" xml:space="preserve">
    <value>Find image</value>
  </data>
  <data name="button_Key_Unassigned" xml:space="preserve">
    <value>Unassigned</value>
  </data>
  <data name="button_OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="button_Picture" xml:space="preserve">
    <value>Choose image</value>
  </data>
  <data name="button_ShowDrawingArea" xml:space="preserve">
    <value>Show area</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="label_Alt" xml:space="preserve">
    <value>Alt</value>
  </data>
  <data name="label_Ctrl" xml:space="preserve">
    <value>Ctrl</value>
  </data>
  <data name="label_CurrentPosClick" xml:space="preserve">
    <value>Click at current position</value>
  </data>
  <data name="label_DoubleClick" xml:space="preserve">
    <value>Double click</value>
  </data>
  <data name="label_Drag" xml:space="preserve">
    <value>Drag</value>
  </data>
  <data name="label_DragSpeed" xml:space="preserve">
    <value>Drag speed</value>
  </data>
  <data name="label_Expiration" xml:space="preserve">
    <value>Expiration (s)</value>
  </data>
  <data name="label_IsRandomInterval" xml:space="preserve">
    <value>Random interval</value>
  </data>
  <data name="label_Key" xml:space="preserve">
    <value>Key</value>
  </data>
  <data name="label_LeftClick" xml:space="preserve">
    <value>Left click</value>
  </data>
  <data name="label_MiddleClick" xml:space="preserve">
    <value>Middle click</value>
  </data>
  <data name="label_MoveClick" xml:space="preserve">
    <value>Move</value>
  </data>
  <data name="label_RepeatNumber" xml:space="preserve">
    <value>Number of repetitions</value>
  </data>
  <data name="label_RightClick" xml:space="preserve">
    <value>Right click</value>
  </data>
  <data name="label_Sequence" xml:space="preserve">
    <value>Sequence</value>
  </data>
  <data name="label_SequenceIfExpired" xml:space="preserve">
    <value>If expired</value>
  </data>
  <data name="label_SequenceIfNotFound" xml:space="preserve">
    <value>If not found</value>
  </data>
  <data name="label_SequenceIfPicture" xml:space="preserve">
    <value>If found</value>
  </data>
  <data name="label_SetXY" xml:space="preserve">
    <value>Set X Y at cursor position</value>
  </data>
  <data name="label_SetXY2" xml:space="preserve">
    <value>Set X2 Y2 at cursor position</value>
  </data>
  <data name="label_Shift" xml:space="preserve">
    <value>Shift</value>
  </data>
  <data name="label_StartBot" xml:space="preserve">
    <value>Start Bot</value>
  </data>
  <data name="label_StopBot" xml:space="preserve">
    <value>Stop Bot</value>
  </data>
  <data name="label_Text" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="label_Threshold" xml:space="preserve">
    <value>Threshold</value>
  </data>
  <data name="label_WaitTime" xml:space="preserve">
    <value>Wait time</value>
  </data>
  <data name="label_WaitTimeMax" xml:space="preserve">
    <value>Wait time max</value>
  </data>
  <data name="label_WaitTimeMin" xml:space="preserve">
    <value>Wait time min</value>
  </data>
  <data name="log_ActionAdded" xml:space="preserve">
    <value>Action added : </value>
  </data>
  <data name="log_ActionDeleted" xml:space="preserve">
    <value>Action deleted :  </value>
  </data>
  <data name="log_ActionEdited" xml:space="preserve">
    <value>Action edited : </value>
  </data>
  <data name="log_ActionView_AddMode" xml:space="preserve">
    <value>ActionView dialog Add Mode opened</value>
  </data>
  <data name="log_ActionView_Closed" xml:space="preserve">
    <value>ActionView dialog closed</value>
  </data>
  <data name="log_ActionView_EditMode" xml:space="preserve">
    <value>ActionView dialog Edit Mode opened</value>
  </data>
  <data name="log_ActionView_SelectedPanel" xml:space="preserve">
    <value>Panel selected : </value>
  </data>
  <data name="log_ApplicationClosed" xml:space="preserve">
    <value>Application closed</value>
  </data>
  <data name="log_ApplicationInitialized" xml:space="preserve">
    <value>Application ready to use</value>
  </data>
  <data name="log_AppliedTheme" xml:space="preserve">
    <value>Theme applied</value>
  </data>
  <data name="log_DialogResult_Cancel" xml:space="preserve">
    <value>DialogResult : CANCEL</value>
  </data>
  <data name="log_DialogResult_None" xml:space="preserve">
    <value>DialogResult : NONE</value>
  </data>
  <data name="log_DialogResult_Ok" xml:space="preserve">
    <value>DialogResult : OK</value>
  </data>
  <data name="log_Loaded_Actions" xml:space="preserve">
    <value>Actions loaded</value>
  </data>
  <data name="log_Loading_Action" xml:space="preserve">
    <value>Loading action : </value>
  </data>
  <data name="log_Loading_Actions" xml:space="preserve">
    <value>Loading actions</value>
  </data>
  <data name="log_Loading_Sequence" xml:space="preserve">
    <value>Loading sequence : </value>
  </data>
  <data name="log_Loading_Sequence_Fail" xml:space="preserve">
    <value>Fail to load sequence : </value>
  </data>
  <data name="log_Loading_Sequence_Success" xml:space="preserve">
    <value>Sequence loaded</value>
  </data>
  <data name="log_LocalizationUpdated" xml:space="preserve">
    <value>Localization updated</value>
  </data>
  <data name="log_Sequence_Deleted" xml:space="preserve">
    <value>Sequence deleted : </value>
  </data>
  <data name="log_Sequence_Saved" xml:space="preserve">
    <value>Sequence saved : </value>
  </data>
  <data name="log_SettingLanguage" xml:space="preserve">
    <value>Setting language to :  </value>
  </data>
  <data name="log_SettingSavelogs" xml:space="preserve">
    <value>Setting "SaveLog" value : </value>
  </data>
  <data name="log_UpdateButtonState_Bot" xml:space="preserve">
    <value>"Bot" button state updated : </value>
  </data>
  <data name="log_UpdateButtonState_DeleteAction" xml:space="preserve">
    <value>"Delete" button state updated : </value>
  </data>
  <data name="log_UpdateButtonState_DeleteSequence" xml:space="preserve">
    <value>"Delete sequence" button state updated : </value>
  </data>
  <data name="log_UpdateButtonState_Edit" xml:space="preserve">
    <value>"Edit" button state updated : </value>
  </data>
  <data name="log_UpdateButtonState_Hotkey" xml:space="preserve">
    <value>"Hotkey" button updated</value>
  </data>
  <data name="log_UpdateButtonState_Language" xml:space="preserve">
    <value>"Language" button state updated : </value>
  </data>
  <data name="log_UpdateButtonState_SaveLogs" xml:space="preserve">
    <value>"Savelogs" button state updated : </value>
  </data>
  <data name="log_UpdateButtonState_Theme" xml:space="preserve">
    <value>"Theme" button state updated : </value>
  </data>
  <data name="MessageBox_Error_LoadingSequence" xml:space="preserve">
    <value>Couldn't load sequence.
File might be corrupted.</value>
  </data>
  <data name="MessageBox_Error_SaveSequence_NameUsed" xml:space="preserve">
    <value>Name already used.
Please choose an other name.</value>
  </data>
  <data name="MessageBox_ImageAlreadyInFolder_Caption" xml:space="preserve">
    <value>Replace image ?</value>
  </data>
  <data name="MessageBox_ImageAlreadyInFolder_Message" xml:space="preserve">
    <value>is already present in Pictures folder.
Do you want to replace it ?

Yes : Image will be replaced.
No : Image will be imported with a new name.</value>
  </data>
  <data name="MessageBox_ImageFound" xml:space="preserve">
    <value>Image found at coords : </value>
  </data>
  <data name="MessageBox_ImageNotFound" xml:space="preserve">
    <value>Image not found</value>
  </data>
  <data name="MessageBox_WarningDeleteSequence" xml:space="preserve">
    <value>Warning : This will delete the sequence entirely.
Do you want to proceed ?</value>
  </data>
  <data name="MessageBox_WarningSequenceNotSaved_ChangeSequence" xml:space="preserve">
    <value>Warning : Unsaved changes will be lost.
Do you want to load selected sequence ?</value>
  </data>
  <data name="MessageBox_WarningSequenceNotSaved_Exit" xml:space="preserve">
    <value>Warning : Unsaved changes will be lost.
Do you want to exit ?</value>
  </data>
  <data name="tab_NewSequence" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="tab_ReplaceSequence" xml:space="preserve">
    <value>Replace</value>
  </data>
  <data name="title_Hotkeys" xml:space="preserve">
    <value>Hotkeys</value>
  </data>
  <data name="title_NewActionDialog" xml:space="preserve">
    <value>Action</value>
  </data>
  <data name="title_SaveSequenceDialog" xml:space="preserve">
    <value>Save sequence</value>
  </data>
  <data name="toolTip_Button_AddAction" xml:space="preserve">
    <value>Add action</value>
  </data>
  <data name="toolTip_Button_DeleteAction" xml:space="preserve">
    <value>Delete selected action</value>
  </data>
  <data name="toolTip_Button_DeleteSequence" xml:space="preserve">
    <value>Delete sequence</value>
  </data>
  <data name="toolTip_Button_EditAction" xml:space="preserve">
    <value>Edit selected action</value>
  </data>
  <data name="toolTip_Button_SaveSequence" xml:space="preserve">
    <value>Save sequence</value>
  </data>
  <data name="toolTip_Button_StartBot" xml:space="preserve">
    <value>Start Bot</value>
  </data>
  <data name="toolTip_Button_StopBot" xml:space="preserve">
    <value>Stop Bot</value>
  </data>
  <data name="tsm_About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="tsm_Bot" xml:space="preserve">
    <value>Bot</value>
  </data>
  <data name="tsm_Bot_Start" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="tsm_Bot_Stop" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="tsm_File" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="tsm_File_Exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="tsm_File_New" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="tsm_File_Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="tsm_File_SaveAs" xml:space="preserve">
    <value>Save as ...</value>
  </data>
  <data name="tsm_Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="tsm_Settings_Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="tsm_Settings_SaveLogs" xml:space="preserve">
    <value>Save logs</value>
  </data>
  <data name="tsm_Settings_Shortcuts" xml:space="preserve">
    <value>Hotkeys</value>
  </data>
  <data name="tsm_Settings_Theme" xml:space="preserve">
    <value>Theme</value>
  </data>
</root>